<x-layouts.auth>
    <x-slot name="title">Documentation</x-slot>
    <x-slot name="meta">
        <meta name="description" content="Documentation">
    </x-slot>

    <!-- Documentation Page -->
    <div class="techwave_fn_doc_page">

        <div class="docpage">
            <!-- Page Title -->
            <div class="techwave_fn_pagetitle">
                <h2 class="title">Documentation</h2>
            </div>
            <!-- !Page Title -->
            <div class="doccontent">
                <div class="container small">
                    <div id="doc_introduction">
                        <h4>Thank you for choosing TECH-AI</h4>
                        <p>Dear Client</p>
                        <p>We wanted to inform you that this documentation was generated by an AI chat bot as an
                            example. While the content and structure of the documentation are based on best practices
                            and industry standards, please note that it may not fully align with your specific
                            requirements or project scope.</p>
                        <p>The AI chat bot utilized advanced language processing capabilities to generate the
                            documentation, incorporating information and guidelines commonly found in similar
                            documentation. However, we strongly recommend reviewing and customizing the documentation to
                            accurately reflect your project's unique needs, preferences, and implementation details.</p>
                        <p>We understand the importance of tailored documentation that addresses your specific goals,
                            and our team is more than happy to assist you in creating a comprehensive and customized
                            documentation package. We will work closely with you to understand your project's
                            intricacies and deliver documentation that precisely matches your expectations.</p>
                        <p>Should you require any further assistance or have any questions regarding the documentation
                            or any other aspect of your project, please feel free to reach out to our team. We are
                            committed to providing you with the highest level of support and ensuring the success of
                            your endeavor.</p>
                        <p>Thank you for your understanding, and we look forward to collaborating with you further.</p>
                        <p>Best regards,<br>Jack Nelson,<br>Frenify</p>
                        <h4>Introduction</h4>
                        <p><b>Overview:</b> Explore how the AI chat bot leverages natural language processing (NLP)
                            algorithms and machine learning techniques to understand user input and generate
                            contextually appropriate responses.</p>
                        <p><b>Authentication:</b> Provided Login, Register, Forgot Password, Reset Password, Confirm
                            Password & Email Verification by using Laravel most used Laravel/ui.</p>
                        <p><b>Security:</b> Two step verification provided and discover the power of Laravel 11.</p>
                        <p><b>Key Features:</b> Created With Laravel 11, Dive deeper into the key features, such as
                            sentiment analysis, entity
                            recognition, and intent classification, that empower the AI chat bot to provide intelligent
                            and accurate interactions.</p>
                        <p><b>System Requirements:</b> Review the hardware and software prerequisites necessary for
                            deploying and running the AI chat bot, including supported operating systems, browsers, and
                            server requirements.</p>
                    </div>
                    <div id="doc_customization">
                        <h4>Customization</h4>
                        <p><b>Chat Bot Appearance:</b> Learn how to modify the visual elements of the chat bot,
                            including its layout, typography, icons, and overall design, to match your brand's
                            aesthetics or user interface guidelines.</p>
                        <p><b>Conversational Flow:</b> Gain insights into customizing the chat bot's dialogue flow,
                            including creating custom intents, defining response templates, and incorporating
                            context-aware conversations to improve user engagement.</p>
                        <p><b>Personalization:</b> Explore advanced customization options, such as user profiling,
                            personalized recommendations, and user-specific preferences, to enhance the user experience
                            and make interactions more tailored and relevant.</p>
                    </div>
                    <div id="doc_video">
                        <h4>Video Tutorials</h4>
                        <p><b>Step-by-Step Implementation:</b> Access a library of video tutorials that guide you
                            through each phase of the AI chat bot implementation process, including installation,
                            configuration, customization, and deployment.</p>
                        <p><b>Best Practices:</b> Learn from expert tips and best practices demonstrated in video
                            tutorials to optimize the performance, scalability, and user satisfaction of your AI chat
                            bot.</p>
                    </div>
                    <div id="doc_darkmode">
                        <h4>Dark Mode</h4>
                        <p><b>Enabling Dark Mode:</b> Understand how to implement and toggle the dark mode feature
                            within the chat bot's user interface, allowing users to switch between light and dark themes
                            based on their preference or the website/application's design.</p>

                        <p>To enable Dark mode in your chat bot, follow these steps:</p>
                        <ul>
                            <li>Go to the resources/views/components/layouts/auth.blade.php</li>
                            <li>Update this line => localStorage.frenify_skin = 'dark';</li>
                            <li>Clear your localstorage or open in new browser.</li>
                        </ul>
                    </div>
                    <div id="doc_lightmode">
                        <h4>Light Mode</h4>
                        <p><b>Enabling Light Mode:</b></p>

                        <p>To enable Light mode in your chat bot, follow these steps:</p>
                        <ul>
                            <li>Go to the resources/views/components/layouts/auth.blade.php</li>
                            <li>Update this line => localStorage.frenify_skin = 'light';</li>
                            <li>Clear your localstorage or open in new browser.</li>
                        </ul>
                    </div>
                    <div id="doc_prerequisites">
                        <h4>Prerequisites</h4>
                        <p>Please follow the below steps to install and setup all prerequisites:</p>

                        <p><strong>Xampp/Wampp:</strong> Make sure to have the Xampp/Wampp installed & running in your
                            computer. PHP Version 8.2 or Higher must be required for Laravel 11.</p>

                        <p><strong>Nodejs:</strong> Make sure to have Node.js installed & running on your computer. If
                            you already have installed Node on your computer, you can skip this step if your existing
                            node version is greater than equal to 18. We suggest you to use LTS version of Node.js.</p>

                        <p><strong>Composer: </strong>Make sure to have the Composer installed & running in your
                            computer. make sure the composer version must be 2.2.0 or Higher.</p>

                        <p><strong>Git:</strong> Make sure to have Git installed globally & running on your computer. If
                            you already have installed git on your computer, you can skip this step.</p>
                    </div>
                    <div id="doc_installation">
                        <h4>Installation</h4>
                        <p>After you finished with the above steps, you can run the following commands into the
                            terminal/command prompt from the root directory ( Techwave_Laravel_v*/ ) of the project to
                            run the project locally or build for production use:</p>

                        <pre>npm install</pre>
                        <p>This would install all the required dependencies in the node_modules folder.</p>

                        <pre>composer install</pre>
                        <p>command to install all of the framework's dependencies.</p>

                        <pre>php artisan key:generate</pre>
                        <p>Please run the below command to generate the new key.</p>

                        <p>Please fill your DB credentials in the .env file.</p>
                        <pre>DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=techwave_laravel
DB_USERNAME=root
DB_PASSWORD=</pre>
                    </div>

                    <p>Please fill your email credentials in the .env file.</p>
                    <pre>MAIL_MAILER=
MAIL_HOST=
MAIL_PORT=
MAIL_USERNAME=
MAIL_PASSWORD=
MAIL_ENCRYPTION=
MAIL_FROM_ADDRESS="support@techwave.com"
MAIL_FROM_NAME="${APP_NAME}"</pre>

                    <p>To compile all scss to css and copy all files from resource to public directory.</p>
                    <pre>npm run build</pre>

                    <p>Please run the following commands to clear all cache from the project.</p>
                    <pre>php artisan optimize:clear</pre>

                    <p>This will migrate the database tables. For more details visit <a
                            href="https://laravel.com/docs/11.x/migrations">https://laravel.com/docs/11.x/migrations</a>
                    </p>
                    <pre>php artisan migrate</pre>

                    <p>The development server is accessible at <a
                            href="http://localhost:8000">http://localhost:8000</a>.</p>
                    <pre>php artisan serve</pre>

                    <p>To run on other port just run command:</p>
                    <pre>php artisan serve --port=8001</pre>

                    <div id="doc_assets">
                        <h4>Build Assets</h4>
                        <p><b>Integration APIs:</b> Explore a comprehensive guide on how to integrate the AI chat bot
                            with various platforms, utilizing APIs to send and receive messages, extract user data, and
                            leverage additional functionalities offered by external services.</p>
                        <p><b>SDKs and Libraries:</b> Discover software development kits (SDKs) or libraries that
                            provide pre-built components and tools for seamless integration, simplifying the development
                            process and reducing implementation time.</p>
                        <p>To building assets in your chat bot, follow these steps:</p>
                        <pre>npm run build</pre>
                    </div>
                    <div id="doc_multidemo">
                        <h4>Multi-Demo</h4>
                        <p><b>Multi-Language Support:</b> Learn about language localization techniques and how to
                            incorporate multiple languages into the AI chat bot, enabling it to communicate effectively
                            with users from diverse linguistic backgrounds.</p>
                        <p><b>Multi-Platform Deployment:</b> Gain insights into deploying the AI chat bot across
                            different platforms simultaneously, such as websites, mobile apps, social media, and
                            messaging platforms, ensuring broad accessibility and a consistent user experience.</p>
                    </div>
                    <div id="doc_structure">
                        <h4>File Structure</h4>
                        <p><b>Project Organization:</b> Explore an in-depth overview of the AI chat bot's file
                            structure, including the organization of code files, assets, configuration files, and
                            third-party libraries. Understand how different components interact and collaborate within
                            the project.</p>
                        <p>Remember, the documentation should provide clear instructions, explanations, and examples to
                            assist users in understanding and implementing the AI chat bot effectively. It should also
                            incorporate diagrams, diagrams, and flowcharts where applicable, to enhance comprehension.
                        </p>
                    </div>
                    <div id="doc_tips">
                        <h4>Usefull Tips</h4>
                        <!-- Accordion Shortcode -->
                        <div class="techwave_fn_accordion" data-type="accordion">
                            <!-- data-type values: accordion, toggle -->

                            <!-- #1 accordion item -->
                            <div class="acc__item">
                                <div class="acc__header">
                                    <h2 class="acc__title">How to add menu in sidebar?</h2>
                                    <div class="acc__icon"></div>
                                </div>
                                <div class="acc__content">
                                    <p>For addeding menu in sidebar you have to go folowing directory.
                                    resources/views/components/sidebar.blade.php</p>
                                </div>
                            </div>
                            <!-- !#1 accordion item -->

                             <!-- #2 accordion item -->
                             <div class="acc__item">
                                <div class="acc__header">
                                    <h2 class="acc__title">How to turn of two step verification?</h2>
                                    <div class="acc__icon"></div>
                                </div>
                                <div class="acc__content">
                                    <p>Turn of Two step verification by following steps.</p>
                                    <p><strong>1. </strong> Go to the app/Models/User.php</p>
                                    <p><strong>2. </strong> Remove MustVerifyEmail implementation</p>
                                    <p><strong>3. </strong> in web.php file update following code.</p>
                                    <pre>Auth::routes(['verify' => true]); // before
Auth::routes(); // after</pre>
                                    <p><strong>4. </strong> Remove following code from app/Http/Controllers/Auth/RegisterController.php</p>
                                    <pre>$user->sendEmailVerificationNotification();</pre>
                                    <p><strong>5. </strong>Restart your application using following command</p>
                                    <pre>php artisan serve</pre>
                                </div>
                            </div>
                            <!-- !#2 accordion item -->

                        </div>
                        <!-- !Accordion Shortcode -->
                    </div>
                </div>
            </div>
        </div>

        <div class="docsidebar">
            <ul>
                <li>
                    <a href="#doc_introduction">Introduction</a>
                </li>
                <li class="menu-item-has-children">
                    <a href="javascript:void(0);">
                        Quick Setup
                        <span class="trigger"><img src="{{ URL::asset('build/svg/arrow.svg') }}" alt=""
                                class="fn__svg"></span>
                    </a>
                    <ul class="sub-menu">
                        <li>
                            <a href="#doc_customization"><span class="text">Customization</span></a>
                        </li>
                        <li>
                            <a href="#doc_video"><span class="text">Video Tutorials</span></a>
                        </li>
                        <li>
                            <a href="#doc_darkmode"><span class="text">Dark Mode</span></a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a href="#doc_assets">Build Assets</a>
                </li>
                <li>
                    <a href="#doc_multidemo">Multi-demo</a>
                </li>
                <li>
                    <a href="#doc_structure">File Structure</a>
                </li>
            </ul>
        </div>
    </div>
    <!-- !Documentation Page -->
</x-layouts.auth>
